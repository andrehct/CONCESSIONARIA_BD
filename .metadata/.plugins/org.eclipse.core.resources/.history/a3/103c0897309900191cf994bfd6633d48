package br.com.concessionaria.dao;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.util.ArrayList;
import java.util.List;

import br.com.concessionaria.factory.DAOFactory;
import br.com.concessionaria.infra.ConexaoDAO;
import br.com.concessionaria.infra.InterfaceDAO;
import br.com.concessionaria.vo.TipoAutomovelVO;

public class TipoAutomovelDAO implements InterfaceDAO<TipoAutomovelVO>{
	
	private PreparedStatement stmt = null;
	private ResultSet res = null;
	private Connection conn = ConexaoDAO.getConn();
	StringBuilder sql = new StringBuilder();

	@Override
	public void inserir(TipoAutomovelVO t) {
		try {
			//Montando a query sql
				sql.setLength(0);
				sql.append("INSERT INTO TIPO_AUTOMOVEL ");
				sql.append("([NOM_TPAUTO]) ");
				sql.append("VALUES (?)");
			//Montando o statement para o banco
				stmt = conn.prepareStatement(sql.toString());
				stmt.setString(1, t.getNome());
			//Executando a query no banco
				stmt.executeUpdate();
			
		}catch(Exception ex) {
			System.out.println("Erro ao tentar inserir o tipo de automóvel.");
			ex.printStackTrace();
			
		}finally {
			ConexaoDAO.liberaConexao(conn, stmt, res);
		}
		
	}

	@Override
	public void alterar(TipoAutomovelVO t, String... chave) {
		//chave[0] vai ter o novo nome do tipo do automóvel
		
		TipoAutomovelVO aux = DAOFactory.createTipoAutomovelDAO().consultar(t.getNome());
		try {
			//Montando a query sql
				sql.setLength(0);
				sql.append("UPDATE TIPO_AUTOMOVEL SET ");
				sql.append("[NOM_TPAUTO] = ?,");
				sql.append("WHERE [ID_TPAUTO] = ?");
			//Montando o statement para o banco
				stmt = conn.prepareStatement(sql.toString());
				stmt.setString(1, chave[0]);
				stmt.setString(2, Integer.toString(aux.getIdTPAuto()));
			//Executando a query no banco
				stmt.executeUpdate();
			
		}catch(Exception ex) {
			System.out.println("Erro ao tentar alterar os dados do tipo de automóvel.");
			ex.printStackTrace();
			
		}finally {
			ConexaoDAO.liberaConexao(conn, stmt, res);
		}
		
	}

	@Override
	public void excluir(String... chave) {
		try {
			//Montando a query sql
				sql.setLength(0);
				sql.append("DELETE FROM TIPO_AUTOMOVEL ");
				sql.append("WHERE [NOM_TPAUTO] = ?");
			//Montando o statement para o banco
				stmt = conn.prepareStatement(sql.toString());
				stmt.setString(1, chave[0]);
			//Executando a query no banco
				stmt.executeUpdate();
			
		}catch(Exception ex) {
			System.out.println("Erro ao tentar excluir o tipo de automóvel.");
			ex.printStackTrace();
			
		}finally {
			ConexaoDAO.liberaConexao(conn, stmt, res);
		}
		
	}

	@Override
	public TipoAutomovelVO consultar(String... chave) {
		TipoAutomovelVO aux = new TipoAutomovelVO();
		
		try {
			//Montando a query sql
				sql.setLength(0);
				sql.append("SELECT ");
				sql.append("[ID_TPAUTO] FROM TIPO_AUTOMOVEL ");
				sql.append("WHERE NOM_TPAUTO = ?");
			//Montando o statement para o banco
				stmt = conn.prepareStatement(sql.toString());
				stmt.setString(1, chave[0]);
			//Executando a query no banco
				res = stmt.executeQuery();
			//Pegando a linha de resultado com o next
				res.next();
			//atualizando cor com o id obtido
				aux.setIdTPAuto(res.getInt("ID_TPAUTO"));
				aux.setNome(chave[0]);
		}catch(Exception ex) {
			System.out.println("Erro ao tentar selecionar dados do tipo de automóvel.");
			ex.printStackTrace();
			
		}finally {
			ConexaoDAO.liberaConexao(conn, stmt, res);
		}
		
		return aux;
	}

	@Override
	public List<TipoAutomovelVO> listar() {
		List<TipoAutomovelVO> aux = new ArrayList<TipoAutomovelVO>();
		
		try {
			//Montando a query sql
				sql.setLength(0);
				sql.append("SELECT * FROM TIPO_AUTOMOVEL");
			//Montando o statement para o banco
				stmt = conn.prepareStatement(sql.toString());
			//Executando a query no banco
				res = stmt.executeQuery();
			//Pegando a linha de resultado com o next
				while(res.next()) {
					TipoAutomovelVO el = new TipoAutomovelVO();
					el.setIdTPAuto(res.getInt("ID_TPAUTO"));
					el.setNome(res.getString("NOM_TPAUTO"));
					aux.add(el);
				}
		}catch(Exception ex) {
			System.out.println("Erro ao tentar selecionar todos os dados do tipo de automóvel.");
			ex.printStackTrace();
			
		}finally {
			ConexaoDAO.liberaConexao(conn, stmt, res);
		}
		
		return aux;
	}

}
