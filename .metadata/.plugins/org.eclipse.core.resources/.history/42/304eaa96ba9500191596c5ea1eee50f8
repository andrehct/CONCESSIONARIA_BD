package br.com.concessionaria.dao;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.util.List;

import br.com.concessionaria.factory.DAOFactory;
import br.com.concessionaria.infra.ConexaoDAO;
import br.com.concessionaria.infra.InterfaceDAO;
import br.com.concessionaria.vo.SeguradoraVO;

public class SeguradoraDAO implements InterfaceDAO<SeguradoraVO>{
	
	private PreparedStatement stmt = null;
	private ResultSet res = null;
	private Connection conn = ConexaoDAO.getConn();
	StringBuilder sql = new StringBuilder();

	@Override
	public void inserir(SeguradoraVO t) {
		try {
			//Montando a query sql
				sql.setLength(0);
				sql.append("INSERT INTO SEGURADORA ");
				sql.append("([NOM_SEGURADORA],[DES_ENDERECO],[NUM_TELEFONE]) ");
				sql.append("VALUES (?,?,?)");
			//Montando o statement para o banco
				stmt = conn.prepareStatement(sql.toString());
				stmt.setString(1, t.getNomeSeguradora());
				stmt.setString(2, t.getEndereco());
				stmt.setString(3, t.getTelefone());
			//Executando a query no banco
				stmt.executeUpdate();
			
		}catch(Exception ex) {
			System.out.println("Erro ao tentar inserir a seguradora.");
			ex.printStackTrace();
			
		}finally {
			ConexaoDAO.liberaConexao(conn, stmt, res);
		}
		
	}

	@Override
	public void alterar(SeguradoraVO t, String... chave) {
		//chave[0] = novo nome
		//chave[1] = novo endereco
		//chave[2] = novo telefone
		SeguradoraVO aux = DAOFactory.createSeguradoraDAO().consultar(t.getNomeSeguradora());
		try {
			//Montando a query sql
				sql.setLength(0);
				sql.append("UPDATE SEGURADORA SET ");
				sql.append("[NOM_SEGURADORA] = ?,");
				sql.append("[DES_ENDERECO] = ?,");
				sql.append("[NUM_TELEFONE] = ? ");
				sql.append("WHERE [NOM_SEGURADORA] = ?");
			//Montando o statement para o banco
				stmt = conn.prepareStatement(sql.toString());
				stmt.setString(1, chave[0]);
				stmt.setString(2, chave[1]);
				stmt.setString(3, chave[2]);
				stmt.setString(4, Integer.toString(aux.getIdSeg()));
			//Executando a query no banco
				stmt.executeUpdate();
			
		}catch(Exception ex) {
			System.out.println("Erro ao tentar alterar os dados do funcionário.");
			ex.printStackTrace();
			
		}finally {
			ConexaoDAO.liberaConexao(conn, stmt, res);
		}
		
	}

	@Override
	public void excluir(String... chave) {
		//chave[0] = nome da seguradora
		try {
			//Montando a query sql
				sql.setLength(0);
				sql.append("DELETE FROM SEGURADORA ");
				sql.append("WHERE [NOM_SEGURADORA] = ?");
			//Montando o statement para o banco
				stmt = conn.prepareStatement(sql.toString());
				stmt.setString(1, chave[0]);
			//Executando a query no banco
				stmt.executeUpdate();
			
		}catch(Exception ex) {
			System.out.println("Erro ao tentar excluir a seguradora.");
			ex.printStackTrace();
			
		}finally {
			ConexaoDAO.liberaConexao(conn, stmt, res);
		}
		
	}

	@Override
	public SeguradoraVO consultar(String... chave) {
		SeguradoraVO seg = new SeguradoraVO();
		
		try {
			//Montando a query sql
				sql.setLength(0);
				sql.append("SELECT ");
				sql.append("[ID_SEGURADORA],");
				sql.append("[NOM_SEGURADORA],");
				sql.append("[DES_ENDERECO],");
				sql.append("[NUM_TELEFONE] FROM FUNCIONARIO ");
				sql.append("WHERE [NOM_SEGURADORA] = ?");
			//Montando o statement para o banco
				stmt = conn.prepareStatement(sql.toString());
				stmt.setString(1, chave[0]);
			//Executando a query no banco
				res = stmt.executeQuery();
			//Pegando a linha de resultado com o next
				res.next();
			//criando seguradora com os dados obtidos
				seg.setNomeSeguradora(chave[0]);
				seg.setIdSeg(res.getInt("ID_SEGURADORA"));
				seg.setEndereco(res.getString("DES_ENDERECO"));
				seg.setTelefone(res.getString("NUM_TELEFONE"));
		}catch(Exception ex) {
			System.out.println("Erro ao tentar selecionar dados da seguradora.");
			ex.printStackTrace();
			
		}finally {
			ConexaoDAO.liberaConexao(conn, stmt, res);
		}
		
		return seg;
	}

	@Override
	public List<SeguradoraVO> listar() {
		// TODO Auto-generated method stub
		return null;
	}

}
